{"version":3,"sources":["./src/app/home/home-routing.module.ts","./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","export default \"<ion-header  mode=ios>\\n  <ion-toolbar  color=\\\"dark\\\">\\n    <ion-title>\\n      LAJAN RAPID\\n     </ion-title>\\n  </ion-toolbar>\\n  <ion-buttons>\\n    <ion-item-divider>\\n      <ion-label>Rapid, fasil epi garanti</ion-label>\\n    </ion-item-divider>\\n  </ion-buttons>\\n </ion-header>\\n\\n<ion-content>\\n\\n  <div  class=\\\"ion-padding\\\">\\n\\n   \\n    <div>\\n\\n      <div class=\\\"container-fluid border rounded\\\">\\n        <ion-item lines=\\\"none\\\" >\\n          <ion-label>Rapid balance :</ion-label>\\n          <ion-badge slot=\\\"end\\\" color=\\\"medium\\\">{{account.amount | currency}}</ion-badge>\\n        </ion-item>\\n      </div>\\n     <div class=\\\"container-fluid border mt-3\\\">\\n        <ion-item>\\n          <ion-label>Refill your account</ion-label>\\n          <ion-chip slot=\\\"end\\\">Devise : {{account.devise}}</ion-chip>\\n        </ion-item>\\n        <ion-item-sliding>\\n          <ion-slides [options]=\\\"{ slidesPerView: '1.5', zoom: false, grabCursor: true }\\\">\\n            <ng-container *ngIf=\\\"account.devise=='USD'\\\">\\n              <ion-slide (click)=\\\"refill('USD',star)\\\" *ngFor=\\\"let star of reedemUSD\\\"><ion-card>\\n                <ion-card-content>\\n                  <ion-card-title>{{star|currency}}</ion-card-title>\\n                  <ion-card-subtitle>Add {{star|currency}} to your star card</ion-card-subtitle>\\n                </ion-card-content>\\n                </ion-card></ion-slide>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"account.devise=='HTG'\\\">\\n              <ion-slide *ngFor=\\\"let star of reedemHTG\\\"><ion-card>\\n                <ion-card-content>\\n                  <ion-card-title>{{star}} gdes</ion-card-title>\\n                  <ion-card-subtitle>Add {{star}} gdes to your star card</ion-card-subtitle>\\n                </ion-card-content>\\n                </ion-card></ion-slide>\\n            </ng-container>\\n          \\n    \\n          </ion-slides>\\n        </ion-item-sliding>\\n      </div>\\n    \\n      <div class=\\\"container-fluid border mt-3\\\">\\n        <ion-list>\\n          <ion-item><ion-label>Reedem Historic</ion-label></ion-item>\\n          <ion-row>\\n            <ion-col size=\\\"7\\\"><b>Amount</b></ion-col>\\n            <ion-col ><b>purchased date</b></ion-col>\\n          </ion-row>\\n          <ion-row *ngFor=\\\"let reedem of account.refillHistoric\\\">\\n            <ion-col size=\\\"7\\\"><ion-label>{{reedem.amount}}</ion-label></ion-col>\\n            <ion-col ><ion-label>{{reedem.date|date}}</ion-label></ion-col>\\n          </ion-row>\\n          <ion-item><ion-label>Total Refilling</ion-label>\\n                    <ion-badge slot=\\\"end\\\">0.00$</ion-badge>\\n          </ion-item>\\n        </ion-list>\\n        \\n      </div>\\n    \\n      <div class=\\\"container-fluid border mt-3\\\">\\n        <ion-list>\\n          <ion-item><ion-label>Transactions</ion-label></ion-item>\\n          <ion-row >\\n            <ion-col size=\\\"4\\\"><b>Id</b></ion-col>\\n            <ion-col size=\\\"4\\\"><b>Amount</b></ion-col>\\n            <ion-col ><b>Transaction date</b></ion-col>\\n          </ion-row>\\n          <ion-row *ngFor=\\\"let transac of account.transaction\\\">\\n            <ion-col size=\\\"4\\\"><ion-label> {{transac.id}} </ion-label></ion-col>\\n            <ion-col size=\\\"4\\\"><ion-label>{{transac.amount}}</ion-label></ion-col>\\n            <ion-col ><ion-label>{{transac.date|date}}</ion-label></ion-col>\\n          </ion-row>\\n          <ion-item><ion-label>Total Transactions</ion-label>\\n                    <ion-badge slot=\\\"end\\\">{{totalTransac|currency}}</ion-badge>\\n          </ion-item>\\n        </ion-list>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row mt-3 p-3 align-right\\\">\\n      <div class=\\\"col-lg-9 col-md-9 col-9\\\">\\n        <ion-fab (click)=\\\"OpenSettingDialog()\\\">\\n          <ion-fab-button color=\\\"light\\\">\\n             <ion-icon size=\\\"large\\\" name=\\\"settings\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>\\n      </div>\\n      <div class=\\\"col-lg-3 col-md-3 col-3\\\">\\n        <ion-fab (click)=\\\"OpenSenderDialog()\\\">\\n          <ion-fab-button >\\n            <ion-thumbnail >\\n              <ion-img src=\\\"../../assets/icon/logo_lajanrapid.png\\\"></ion-img>\\n            </ion-thumbnail>\\n          </ion-fab-button>\\n        </ion-fab>\\n      </div>\\n        \\n      \\n      \\n    </div>\\n  </div>\\n  \\n \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, PickerController, PopoverController } from '@ionic/angular';\nimport { Account, transactions } from 'src/models/account';\nimport { PopuptransferComponent } from '../popuptransfer/popuptransfer.component';\nimport { PickerOptions } from '@ionic/core';\nimport { PopupsettingComponent } from '../popupsetting/popupsetting.component';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  account!: Account;\n  reedemUSD = ['20','50','100','200','250','500'];\n  reedemHTG = ['250','500','750','1000','5000','10.000'];\n  reedemMethod = '';\n  totalTransac = 0;\n  constructor(private popoverController: PopoverController, private loadingController: LoadingController,\n    private pickerCtrl: PickerController, private payPal: PayPal) { }\n\n  ngOnInit() {\n    this.account = {} as Account;\n    this.account.amount=1000;\n    this.account.devise= 'USD';\n    this.account.refillHistoric = [];\n    this.account.transaction = [];\n  }\n\n  refill(devise: string, amount: string){\n      this.showMethod(amount);\n  }\n\n    async showMethod(amount:string) {\n    const opts: PickerOptions = {\n      buttons: [\n        {\n          text: 'Done',\n          role: 'validate'\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        }\n      ],\n      columns: [\n        {\n          name: 'method',\n          options: [\n            { text: 'Wester-Union', value: 'WU' },\n            { text: 'MonCash$', value: 'MC' },\n            { text: 'Paypal', value: 'PP' },\n            { text: 'Zelle', value: 'ZLL' },\n            { text: 'CashApp', value: 'CA' },\n            { text: 'MoneyGram', value: 'MG' },\n          ]\n\n        }\n      ]\n    };\n    const picker = await this.pickerCtrl.create(opts);\n    picker.present();\n    picker.onDidDismiss().then(async response => {\n      switch(response.role){\n        case 'validate':\n          const col = await picker.getColumn('method');\n          this.reedemMethod = col.options[col.selectedIndex].text;\n          if (this.reedemMethod === 'MonCash$'){\n            console.log('moncash');\n          }else if (this.reedemMethod === 'PayPal'){\n            console.log('Paypal');\n            this.payPal.init({\n              PayPalEnvironmentProduction: 'YOUR_PRODUCTION_CLIENT_ID',\n              PayPalEnvironmentSandbox: 'YOUR_SANDBOX_CLIENT_ID'\n            }).then(() => {\n              // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n              this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n                // Only needed if you get an \"Internal Service Error\" after PayPal login!\n                //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n              })).then(() => {\n                let payment = new PayPalPayment(amount, 'USD', 'Refill balance', 'sale');\n                this.payPal.renderSinglePaymentUI(payment).then(() => {\n                  // Successfully paid\n            \n                  // Example sandbox response\n                  //\n                  // {\n                  //   \"client\": {\n                  //     \"environment\": \"sandbox\",\n                  //     \"product_name\": \"PayPal iOS SDK\",\n                  //     \"paypal_sdk_version\": \"2.16.0\",\n                  //     \"platform\": \"iOS\"\n                  //   },\n                  //   \"response_type\": \"payment\",\n                  //   \"response\": {\n                  //     \"id\": \"PAY-1AB23456CD789012EF34GHIJ\",\n                  //     \"state\": \"approved\",\n                  //     \"create_time\": \"2016-10-03T13:33:33Z\",\n                  //     \"intent\": \"sale\"\n                  //   }\n                  // }\n                }, () => {\n                  // Error or render dialog closed without being successful\n                });\n              }, () => {\n                // Error in configuration\n              });\n            }, () => {\n              // Error in initialization, maybe PayPal isn't supported or something else\n            });\n\n\n          }\n          break;\n\n          case 'cancel':\n            break;\n\n      }\n      \n    });\n  } \n\n  async OpenSettingDialog(){\n    const popover = await this.popoverController.create({\n      component: PopupsettingComponent,\n      showBackdrop: true,\n      backdropDismiss: true,\n      cssClass: 'my-custom-class',\n      mode: 'ios'\n    });\n    popover.present();\n  }\n  async OpenSenderDialog(){\n    const popover = await this.popoverController.create({\n      component: PopuptransferComponent,\n      componentProps: {currentAmount:this.account.amount},\n      showBackdrop: true,\n      backdropDismiss: true,\n      cssClass: 'my-custom-class',\n      mode: 'ios'\n    });\n\n    popover.onWillDismiss().then((response)=>{\n      if(response.role=='transfert'){\n        this.loadingController.create({\n          cssClass: 'my-custom-class',\n              message: 'Please wait...',\n              duration: 2000\n        }).then((load)=>{\n          load.present();\n          let currentTransaction: transactions = response.data;\n          this.account.amount = this.account.amount - currentTransaction.amount;\n          this.account.transaction.push(currentTransaction);\n          this.totalTransac = this.totalTransac + currentTransaction.amount;\n        });\n       \n      }\n    })\n    popover.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}